#!/bin/bash

set -e -o pipefail

# Renamed input paramaters
export AWS_ACCESS_KEY_ID="$INPUT_AWS_ACCESS_KEY_ID"
export AWS_SECRET_ACCESS_KEY="$INPUT_AWS_SECRET_ACCESS_KEY"
export AWS_DEFAULT_REGION="$INPUT_AWS_DEFAULT_REGION"

# Default inputs from env
INPUT_ENV_NAME="${INPUT_ENV_NAME:=$INPUT_APP_NAME}"
UUID="$(python -c 'import uuid; print(uuid.uuid4().hex)')"
INPUT_VERSION_LABEL="${INPUT_VERSION_LABEL:=${UUID//-}}"

ZIP_NAME="$INPUT_APP_NAME-$INPUT_VERSION_LABEL.zip"

yellow() {
    echo -e "\033[33m$1\033[0m"
}

red() {
    echo -e "\033[31m$1\033[0m"
}

yellow "App bundle name: $ZIP_NAME"

yellow "Creating app bundle..."
zip -r "$ZIP_NAME" . -x 'docker-compose*' '.git*'

env_ready() {
  aws elasticbeanstalk describe-environment-health \
    --environment-name "$INPUT_ENV_NAME" \
    --attribute-names Status | grep -q '"Status": "Ready"'
}

# Ensure environment is ready
yellow "Ensuring enviornment is ready..."
env_ready

# Upload zip to S3
yellow "Uploading app version..."
aws s3 cp "$ZIP_NAME" "s3://$INPUT_BUCKET/$INPUT_APP_NAME/"

# Create new application version
yellow "Creating a new app version..."
description="$(git log -1 --pretty=%B) (${GITHUB_SHA:0:7})"
aws elasticbeanstalk create-application-version \
  --application-name "$INPUT_APP_NAME" \
  --description "$description" \
  --version-label "$INPUT_VERSION_LABEL" \
  --source-bundle S3Bucket="$INPUT_BUCKET",S3Key="$INPUT_APP_NAME/$ZIP_NAME"

# Deploy application version
yellow "Updating environment..."
aws elasticbeanstalk update-environment \
  --application-name "$INPUT_APP_NAME" \
  --environment-name "$INPUT_ENV_NAME" \
  --version-label "$INPUT_VERSION_LABEL"

# Wait until environment is ready
yellow "Waiting until update is complete..."
sleep 60
retries=10
curr_retry=1
until env_ready; do
  if [[ $curr_retry -ge $retries ]]; then
    red "Timed out before environment $INPUT_ENV_NAME was ready"
    exit 1
  fi
  sleep $(( 2 ** $curr_retry ))
  curr_retry=$(( $curr_retry + 1 ))
done

# Check if dpeloyment succeeded
yellow "Checking if deployment succeeded..."
env_ready && aws elasticbeanstalk describe-environments \
  --application-name "$INPUT_APP_NAME" \
  --environment-names "$INPUT_ENV_NAME" | grep -q "$INPUT_VERSION_LABEL"
